(
    //
    // GENERAL SETTINGS
    // ================
    //

    // Which colour theme to use.
    theme: "zee-gruvbox",

    // Remove trailing whitespace on all lines when saving.
    // Allowed values: `true` or `false`
    trim_trailing_whitespace_on_save: true,

    //
    // MODES AND TREE-SITTER PARSERS
    // =============================
    //
    // This section defines what modes are available.
    //
    // You have to re-run `zee --build` for any changes to take effect.
    //

    modes: [
        // C
        Mode(
            name: "C",
            scope: "source.c",
            injection_regex: "c",
            patterns: [Suffix(".c"), Suffix(".h")],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "c",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-c",
                        rev: "517bf92b2c5e8baa4241cbb8a49085ed7c3c48d4",
                    ),
                )
            ),
        ),

        // C++
        Mode(
            name: "C++",
            scope: "source.cpp",
            injection_regex: "cpp",
            patterns: [
                Suffix(".cpp"),
                Suffix(".cc"),
                Suffix(".cp"),
                Suffix(".cxx"),
                Suffix(".c++"),
                Suffix(".C"),
                Suffix(".h"),
                Suffix(".hh"),
                Suffix(".hpp"),
                Suffix(".hxx"),
                Suffix(".h++"),
                Suffix(".inl"),
                Suffix(".ipp"),
            ],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "cpp",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-cpp",
                        rev: "38d8b495bd43977498f0eb122e0f9cfef8526d18",
                    ),
                )
            ),
        ),

        // CSS
        Mode(
            name: "CSS",
            scope: "source.css",
            injection_regex: "css",
            patterns: [Suffix(".css")],
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "css",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-css",
                        rev: "a03f1d2d1dfbf6f8e0fdca5f9ff030228241eb57",
                    ),
                )
            ),
        ),

        // Dockerfile
        Mode(
            name: "Dockerfile",
            scope: "source.dockerfile",
            injection_regex: "docker|dockerfile",
            patterns: [
                Name("Dockerfile"),
                Name("dockerfile"),
            ],
            comment: Some(Comment(token: "# ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "dockerfile",
                    source: Git(
                        git: "https://github.com/camdencheek/tree-sitter-dockerfile",
                        rev: "25c71d6a24cdba8f0c74ef40d4d2d93defd7e196",
                    ),
                )
            ),
        ),

        // Haskell
        Mode(
            name: "Haskell",
            scope: "source.haskell",
            injection_regex: "haskell",
            patterns: [
                Suffix(".hs"),
            ],
            comment: Some(Comment(token: "-- ")),
            indentation: Indentation(
                width: 8,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "haskell",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-haskell",
                        rev: "cf394604ae2ec2a5e65b1afbc7dea21258ede403",
                    ),
                )
            ),
        ),

        // HTML
        Mode(
            name: "HTML",
            scope: "text.html.basic",
            injection_regex: "html",
            patterns: [
                Suffix(".html"),
                Suffix(".htm"),
                Suffix(".xhtml"),
                Suffix(".shtml"),
            ],
            comment: None,
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "html",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-html",
                        rev: "29f53d8f4f2335e61bf6418ab8958dac3282077a",
                    ),
                )
            ),
        ),

        // JavaScript
        Mode(
            name: "JavaScript",
            scope: "source.js",
            injection_regex: "^(js|javascript)$",
            patterns: [
                Suffix(".js"),
            ],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "javascript",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-javascript",
                        rev: "a263a8f53266f8f0e47e21598e488f0ef365a085",
                    ),
                )
            ),
        ),

        // JSON
        Mode(
            name: "JSON",
            scope: "source.json",
            injection_regex: "json",
            patterns: [
                Suffix(".json"),
                Suffix(".jsonl"),
            ],
            comment: None,
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "json",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-json",
                        rev: "137e1ce6a02698fc246cdb9c6b886ed1de9a1ed8",
                    ),
                )
            ),
        ),

        // Markdown
        Mode(
            name: "Markdown",
            scope: "source.md",
            injection_regex: "md|markdown",
            patterns: [
                Suffix(".md"),
            ],
            comment: None,
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "markdown",
                    source: Git(
                        git: "https://github.com/MDeiml/tree-sitter-markdown",
                        rev: "d24196f9b3e5af6fcb2ec2a0b6cbc5c06f58b85e",
                    ),
                )
            ),
        ),

        // Protobuf
        Mode(
            name: "Protobuf",
            scope: "source.proto",
            injection_regex: "protobuf",
            patterns: [Suffix(".proto")],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "protobuf",
                    source: Git(
                        git: "https://github.com/yusdacra/tree-sitter-protobuf",
                        rev: "5aef38d655f76a6b0d172340eed3766c93b3124c",
                    ),
                )
            ),
        ),

        // Python
        Mode(
            name: "Python",
            scope: "source.python",
            injection_regex: "python",
            patterns: [
                Suffix(".py"),
                Suffix(".py3"),
                Suffix(".py2"),
                Suffix(".pyi"),
                Suffix(".pyx"),
                Suffix(".pyx.in"),
                Suffix(".pxd"),
                Suffix(".pxd.in"),
                Suffix(".pxi"),
                Suffix(".pxi.in"),
                Suffix(".rpy"),
                Suffix(".cpy"),
            ],
            comment: Some(Comment(token: "# ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "python",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-python",
                        rev: "d6210ceab11e8d812d4ab59c07c81458ec6e5184",
                    ),
                )
            ),
        ),

        // Regex
        Mode(
            name: "Regex",
            scope: "source.regex",
            injection_regex: "regex",
            patterns: [Suffix(".regex")],
            comment: None,
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "regex",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-regex",
                        rev: "e1cfca3c79896ff79842f057ea13e529b66af636",
                    ),
                )
            ),
        ),

        // RON (Rusty Object Notation)
        Mode(
            name: "RON",
            scope: "source.ron",
            injection_regex: "ron",
            patterns: [Suffix(".ron")],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "ron",
                    source: Git(
                        git: "https://github.com/zee-editor/tree-sitter-ron",
                        rev: "7762d709a0f7c1f9e269d0125a2e8a7a69006146",
                    ),
                )
            ),
        ),

        // Ruby
        Mode(
            name: "Ruby",
            scope: "source.ruby",
            injection_regex: "ruby",
            patterns: [
                Suffix(".rb"),
                Name("rakefile"),
                Name("Rakefile"),
                Name("gemfile"),
                Name("Gemfile"),
                Name("gemspec"),
            ],
            comment: Some(Comment(token: "#")),
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "ruby",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-ruby",
                        rev: "5b305c3cd32db10494cedd2743de6bbe32f1a573",
                    ),
                )
            ),
        ),

        // Rust
        Mode(
            name: "Rust",
            scope: "source.rust",
            injection_regex: "rust",
            patterns: [Suffix(".rs")],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "rust",
                    source: Git(
                        git: "https://github.com/zee-editor/tree-sitter-rust",
                        rev: "6bddb3e54b186593f417e2b14f6602d55e0329b8",
                    ),
                )
            ),
        ),

        // Shell scripts
        Mode(
            name: "Shell Script",
            scope: "source.bash",
            injection_regex: "bash",
            patterns: [
                Suffix(".sh"),
                Suffix(".bash"),
                Suffix(".zsh"),
                Name(".bash_login"),
                Name(".bash_logout"),
                Name(".bash_profile"),
                Name(".bashrc"),
                Name(".profile"),
                Name(".zshenv"),
                Name(".zlogin"),
                Name(".zlogout"),
                Name(".zprofile"),
                Name(".zshrc"),
            ],
            comment: Some(Comment(token: "# ")),
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "bash",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-bash",
                        rev: "a8eb5cb57c66f74c63ab950de081207cccf52017",
                    ),
                )
            ),
        ),

        // TOML
        Mode(
            name: "Toml",
            scope: "source.toml",
            injection_regex: "toml",
            patterns: [Suffix(".toml")],
            comment: Some(Comment(token: "# ")),
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "toml",
                    source: Git(
                        git: "https://github.com/ikatyang/tree-sitter-toml.git",
                        rev: "8bd2056818b21860e3d756b5a58c4f6e05fb744e",
                    ),
                )
            ),
        ),

        // Tree sitter queries
        Mode(
            name: "tsq",
            scope: "source.tsq",
            injection_regex: "tsq",
            patterns: [Suffix(".scm")],
            comment: Some(Comment(token: "; ")),
            indentation: Indentation(
                width: 2,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "tsq",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-tsq",
                        rev: "b665659d3238e6036e22ed0e24935e60efb39415",
                    ),
                )
            ),
        ),

        // Typescript
        Mode(
            name: "Typescript",
            scope: "source.ts",
            injection_regex: "^(ts|typescript)$",
            patterns: [
                Suffix(".ts"),
            ],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "typescript",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-typescript",
                        rev: "4c20b54771e4b390ee058af2930feb2cd55f2bf8",
                        path: Some("typescript"),
                    ),
                )
            ),
        ),

        // Typescript with JSX tags, i.e. TSX
        Mode(
            name: "Typescript TSX",
            scope: "source.tsx",
            injection_regex: "tsx",
            patterns: [
                Suffix(".tsx"),
            ],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "tsx",
                    source: Git(
                        git: "https://github.com/tree-sitter/tree-sitter-typescript",
                        rev: "4c20b54771e4b390ee058af2930feb2cd55f2bf8",
                        path: Some("tsx"),
                    ),
                )
            ),
        ),

        // WebGPU shading language
        Mode(
            name: "wgsl",
            scope: "source.wgsl",
            injection_regex: "wgsl",
            patterns: [Suffix(".wgsl")],
            comment: Some(Comment(token: "// ")),
            indentation: Indentation(
                width: 4,
                unit: Space,
            ),
            grammar: Some(
                Grammar(
                    id: "wgsl",
                    source: Git(
                        git: "https://github.com/szebniok/tree-sitter-wgsl.git",
                        rev: "5ca98b174f7dddf69fb7a80c54d49badd1f1f8c4",
                    ),
                )
            ),
        ),
    ]
)
